{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3000/api';\n\n// ConfiguraÃ§Ã£o do axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // ðŸ”‘ importante para cookies e CORS\n});\n\n// Interceptor para adicionar token de autenticaÃ§Ã£o\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Interceptor para tratar respostas\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// ======================\n// Tipos\n// ======================\n\n// ======================\n// ServiÃ§os\n// ======================\n\nexport const authService = {\n  login: async (email, senha) => {\n    const response = await api.post('/auth/login', {\n      email,\n      senha\n    });\n    return response.data;\n  },\n  register: async (nome, email, senha) => {\n    const response = await api.post('/auth/register', {\n      nome,\n      email,\n      senha\n    });\n    return response.data;\n  }\n};\nexport const produtoService = {\n  listar: async (page = 1, limit = 10, categoria) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    if (categoria) params.append('categoria', categoria);\n    const response = await api.get(`/produtos?${params}`);\n    return response.data;\n  },\n  criar: async produto => {\n    const response = await api.post('/produtos', produto);\n    return response.data;\n  },\n  atualizar: async (id, produto) => {\n    const response = await api.patch(`/produtos/${id}`, produto);\n    return response.data;\n  },\n  deletar: async id => api.delete(`/produtos/${id}`),\n  obterPorId: async id => {\n    const response = await api.get(`/produtos/${id}`);\n    return response.data;\n  },\n  obterMaisVendidos: async (limit = 10) => {\n    const response = await api.get(`/produtos/mais-vendidos?limit=${limit}`);\n    return response.data;\n  },\n  obterPorCategoria: async categoria => {\n    const response = await api.get(`/produtos/categoria/${categoria}`);\n    return response.data;\n  }\n};\nexport const vendaService = {\n  listar: async (page = 1, limit = 10, dataInicio, dataFim) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    if (dataInicio) params.append('dataInicio', dataInicio);\n    if (dataFim) params.append('dataFim', dataFim);\n    const response = await api.get(`/vendas?${params}`);\n    return response.data;\n  },\n  criar: async venda => {\n    const response = await api.post('/vendas', venda);\n    return response.data;\n  },\n  atualizar: async (id, venda) => {\n    const response = await api.patch(`/vendas/${id}`, venda);\n    return response.data;\n  },\n  deletar: async id => api.delete(`/vendas/${id}`),\n  obterPorId: async id => {\n    const response = await api.get(`/vendas/${id}`);\n    return response.data;\n  },\n  obterPorPeriodo: async (dataInicio, dataFim) => {\n    const response = await api.get(`/vendas/periodo?dataInicio=${dataInicio}&dataFim=${dataFim}`);\n    return response.data;\n  },\n  obterResumoMensal: async (mes, ano) => {\n    const response = await api.get(`/vendas/resumo-mensal?mes=${mes}&ano=${ano}`);\n    return response.data;\n  }\n};\nexport const relatorioService = {\n  dashboard: async () => {\n    const response = await api.get('/relatorios/dashboard');\n    return response.data;\n  },\n  comparativoMensal: async ano => {\n    const response = await api.get(`/relatorios/comparativo-mensal?ano=${ano}`);\n    return response.data;\n  },\n  detalhado: async (mes, ano) => {\n    const response = await api.get(`/relatorios/detalhado?mes=${mes}&ano=${ano}`);\n    return response.data;\n  },\n  exportar: async (formato, mes, ano) => {\n    const params = new URLSearchParams({\n      formato\n    });\n    if (mes) params.append('mes', mes.toString());\n    if (ano) params.append('ano', ano.toString());\n    const response = await api.get(`/relatorios/exportar?${params}`, {\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","email","senha","post","data","register","nome","produtoService","listar","page","limit","categoria","params","URLSearchParams","toString","append","get","criar","produto","atualizar","id","patch","deletar","delete","obterPorId","obterMaisVendidos","obterPorCategoria","vendaService","dataInicio","dataFim","venda","obterPorPeriodo","obterResumoMensal","mes","ano","relatorioService","dashboard","comparativoMensal","detalhado","exportar","formato","responseType"],"sources":["/home/emano/PROJETO/vendas-api-frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:3000/api';\n\n// ConfiguraÃ§Ã£o do axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // ðŸ”‘ importante para cookies e CORS\n});\n\n// Interceptor para adicionar token de autenticaÃ§Ã£o\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token && config.headers) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error),\n);\n\n// Interceptor para tratar respostas\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  },\n);\n\n// ======================\n// Tipos\n// ======================\n\nexport interface User {\n  id: number;\n  nome: string;\n  email: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Produto {\n  id: number;\n  nome: string;\n  descricao?: string;\n  preco: string;\n  categoria?: string;\n  ativo: boolean;\n  usuarioId: number;\n  createdAt: string;\n  updatedAt: string;\n  _count?: { vendas: number };\n}\n\nexport interface Venda {\n  id: number;\n  produtoId: number;\n  quantidade: number;\n  valorUnit: string;\n  valorTotal: string;\n  dataVenda: string;\n  observacoes?: string;\n  usuarioId: number;\n  createdAt: string;\n  updatedAt: string;\n  produto: { id: number; nome: string; categoria?: string };\n}\n\nexport interface Dashboard {\n  resumoMensal: { totalVendas: number; quantidadeVendas: number; ticketMedio: number };\n  resumoAnual: { totalVendas: number; quantidadeVendas: number; ticketMedio: number };\n  produtosMaisVendidos: Array<{ produto: { nome: string; categoria?: string }; quantidadeVendida: number; valorTotal: string }>;\n  vendasPorCategoria: Record<string, { quantidade: number; valor: number }>;\n  vendasPorDia: Record<string, number>;\n}\n\nexport interface PaginatedResponse<T> {\n  data: T[];\n  total: number;\n  page: number;\n  limit: number;\n  totalPages: number;\n}\n\n// ======================\n// ServiÃ§os\n// ======================\n\nexport const authService = {\n  login: async (email: string, senha: string) => {\n    const response = await api.post('/auth/login', { email, senha });\n    return response.data;\n  },\n  register: async (nome: string, email: string, senha: string) => {\n    const response = await api.post('/auth/register', { nome, email, senha });\n    return response.data;\n  },\n};\n\nexport const produtoService = {\n  listar: async (page = 1, limit = 10, categoria?: string) => {\n    const params = new URLSearchParams({ page: page.toString(), limit: limit.toString() });\n    if (categoria) params.append('categoria', categoria);\n    const response = await api.get(`/produtos?${params}`);\n    return response.data as PaginatedResponse<Produto>;\n  },\n  criar: async (produto: { nome: string; descricao?: string; preco: number; categoria?: string; ativo?: boolean }) => {\n    const response = await api.post('/produtos', produto);\n    return response.data as Produto;\n  },\n  atualizar: async (id: number, produto: Partial<{ nome: string; descricao?: string; preco: number; categoria?: string; ativo?: boolean }>) => {\n    const response = await api.patch(`/produtos/${id}`, produto);\n    return response.data as Produto;\n  },\n  deletar: async (id: number) => api.delete(`/produtos/${id}`),\n  obterPorId: async (id: number) => {\n    const response = await api.get(`/produtos/${id}`);\n    return response.data as Produto;\n  },\n  obterMaisVendidos: async (limit = 10) => {\n    const response = await api.get(`/produtos/mais-vendidos?limit=${limit}`);\n    return response.data as Produto[];\n  },\n  obterPorCategoria: async (categoria: string) => {\n    const response = await api.get(`/produtos/categoria/${categoria}`);\n    return response.data as Produto[];\n  },\n};\n\nexport const vendaService = {\n  listar: async (page = 1, limit = 10, dataInicio?: string, dataFim?: string) => {\n    const params = new URLSearchParams({ page: page.toString(), limit: limit.toString() });\n    if (dataInicio) params.append('dataInicio', dataInicio);\n    if (dataFim) params.append('dataFim', dataFim);\n    const response = await api.get(`/vendas?${params}`);\n    return response.data as PaginatedResponse<Venda>;\n  },\n  criar: async (venda: { produtoId: number; quantidade: number; dataVenda: string; observacoes?: string }) => {\n    const response = await api.post('/vendas', venda);\n    return response.data as Venda;\n  },\n  atualizar: async (id: number, venda: Partial<{ produtoId: number; quantidade: number; dataVenda: string; observacoes?: string }>) => {\n    const response = await api.patch(`/vendas/${id}`, venda);\n    return response.data as Venda;\n  },\n  deletar: async (id: number) => api.delete(`/vendas/${id}`),\n  obterPorId: async (id: number) => {\n    const response = await api.get(`/vendas/${id}`);\n    return response.data as Venda;\n  },\n  obterPorPeriodo: async (dataInicio: string, dataFim: string) => {\n    const response = await api.get(`/vendas/periodo?dataInicio=${dataInicio}&dataFim=${dataFim}`);\n    return response.data as Venda[];\n  },\n  obterResumoMensal: async (mes: number, ano: number) => {\n    const response = await api.get(`/vendas/resumo-mensal?mes=${mes}&ano=${ano}`);\n    return response.data;\n  },\n};\n\nexport const relatorioService = {\n  dashboard: async () => {\n    const response = await api.get('/relatorios/dashboard');\n    return response.data as Dashboard;\n  },\n  comparativoMensal: async (ano: number) => {\n    const response = await api.get(`/relatorios/comparativo-mensal?ano=${ano}`);\n    return response.data;\n  },\n  detalhado: async (mes: number, ano: number) => {\n    const response = await api.get(`/relatorios/detalhado?mes=${mes}&ano=${ano}`);\n    return response.data;\n  },\n  exportar: async (formato: 'json' | 'csv', mes?: number, ano?: number) => {\n    const params = new URLSearchParams({ formato });\n    if (mes) params.append('mes', mes.toString());\n    if (ano) params.append('ano', ano.toString());\n    const response = await api.get(`/relatorios/exportar?${params}`, { responseType: 'blob' });\n    return response.data as Blob;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}